// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract TextToBytes32 {
    
    function stringToBytes32(string memory text) public pure returns (bytes32 result) {
        require(bytes(text).length <= 32, "String too long");
        
        assembly {
            result := mload(add(text, 32))
        }
    }
    
    function bytes32ToString(bytes32 data) public pure returns (string memory) {
        bytes memory bytesArray = new bytes(32);
        
        for (uint256 i; i < 32; i++) {
            bytesArray[i] = data[i];
        }
        
        return string(bytesArray);
    }
}
